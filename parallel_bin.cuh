#pragma once

#ifndef PARALLEL_BIN_CUH_
#define PARALLEL_BIN_CUH_

#include <string>
#include "simuConsts.h"

class ParallelBin {

public:
    struct BinParameters
    {
        unsigned int seed;
        double teta_table_thread;
        double p;
        double tetadir;
        double sin_tetadir;
        double cos_tetadir;
        double tan_tetadir;
        double cos_tetadirCry1;
        double fidir;
        double sin_fidir;
        double cos_fidir;
        double tan_fidir;
        double cos_fidirtilt;
        double z;
        double y;
        double r;
        double tetap;
        double sin_tetap;
        double cos_tetap;
        double var_temp;
        double y_pro_C1;
        double z_pro_C1;
        double rx;
        double ry;
        double rz;
        double Costeta_CHC;
        double Sinteta_CHC;
        double n1x;
        double n1y;
        double angle;
        double r2x;
        double r2y;
        double r2z;
        double lamda;
        double tetabra1;
        bool first_crystal_reach;
        double rx_rot;
        double ry_rot;
        double cos_fidirtilt2_para;
        double cos_fidirtilt2_anti;
        double corr_dis;
        double sin_tetatab_del_dir;
        double tetabra2;
        double n2x_para;
        double n2y_para;
        double r3x;
        double r3y;
        double r3z;
        bool sec_crystal_Parallel_reach;
        double rx_rot_sec;
        double ry_rot_sec;
        double tetadir_det;
        double tan_tetadir_det;
        double cos_tetadir_det;
        double fidir_det;
        double tan_fidir_det;
        double cos_fidir_det;
        double corr_dis_d_pa;
        double y_pro_C1_d_pa;
        double cos_tetap_det;
        double sin_tetap_det;
        double r_det;
        double y_det;
        double z_det;
        double n2x_anti;
        double n2y_anti;
        bool sec_crystal_Antiparallel_reach;
        double energy_sum_para_thread;
        double energy_sum_anti_thread;
        int toint_para;
        int toint_anti;
        int counts_sour;
        int counts_C1;
        int counts_C2_para;
        int counts_C2_anti;
        int counts_detc_para;
        int counts_detc_anti;
        std::vector<std::vector<double>> eventsToTrace_para;
        std::vector<std::vector<double>> eventsToTrace_anti;
        double delrot;

        double max_plot_x[6];
        double max_plot_y[6];
        double hist_image_plate_source[n_his_ima][n_his_ima];
        double hist_image_plate_crystal1[n_his_ima][n_his_ima];
        double hist_image_plate_crystal2_para[n_his_ima][n_his_ima];
        double hist_image_plate_crystal2_anti[n_his_ima][n_his_ima];
        double hist_image_plate_detc_para[n_his_ima][n_his_ima];
        double hist_image_plate_detc_anti[n_his_ima][n_his_ima];
        double max_hist[6];
    };

    struct SetupParameters
    {
        double teta_table;
        double table_resolution;
        bool make_table_noise;
        bool Make_Horizontal;
        bool Make_Vertical;
        double xsi;
        std::string type_source;
        double S_shi_ver_B;
        double S_shi_hor_B;
        double S_sour;
        double z_sour;
        double y_sour;
        double S_shi_ver_A;
        double S_shi_hor_A;
        bool make_image_plates;
        bool make_imageC1_After_refle;
        bool Curve_crystall;
        bool mka_poli;
        bool see_para;
        bool make_imageC2_After_refle;
        int number_events;
        bool see_anti;
        double del_teta_L;
        double teta_min_L;
        double del_fi_L;
        double fi_min_L;
        double convrad;
        double tilt_C1_temp;
        double S_sour_2;
        double S_aper_R_2;
        double S_aper_var_2;
        double z_sour_2;
        double y_sour_2;
        double S_aper_sqr;
        double LT_aper_Db;
        double y_max_C1;
        double y_min_C1;
        double z_max_C1;
        double z_min_C1;
        double n1x_temp;
        double n1y_temp;
        double n1z;
        double a_lamds_uni;
        double b_lamds_uni;
        double tw_d1_para;
        double relationP_S;
        double cos_tetartab;
        double sin_tetartab;
        double tilt_C2_para_temp;
        double tilt_C2_anti_temp;
        double cos_difteC1_Ta;
        double sin_difteC1_Ta;
        double dist_Cr1_Cr2_Db;
        double tetaref;
        double y_max_C2;
        double y_min_C2;
        double z_max_C2;
        double z_min_C2;
        double tw_d2_para;
        double n2x_para_temp;
        double n2y_para_temp;
        double n2z_para;
        double cos_tetartabdete_para;
        double sin_tetartabdete_para;
        double cos_difteC2_det_para;
        double sin_difteC2_det_para;
        double dist_Cr2_det_Db;
        double ydetc_2_max;
        double ydetc_2_min;
        double zdetc_2_max;
        double zdetc_2_min;
        double Convert_Ag_minusone_eV;
        double tw_d2_anti;
        double n2x_anti_temp;
        double n2y_anti_temp;
        double n2z_anti;
        double cos_tetartabdete_anti;
        double sin_tetartabdete_anti;
        double R_cur_crys_1;
        double R_cur_crys_2;
        int make_more_lines;
        bool Do_background;
        double p1_ener;
        double p2_ener;
        double p3_ener;
        energy_vecs Energy_spectrum_vectors;
        pick picks[5];
        double gauss_Doop;
        std::vector<double> available_energies;
        std::vector<double> min_angle_resp;
        std::vector<double> max_angle_resp;
        bool mka_poli;
        std::vector<plotresponc_vecs> Crystal_Responces;
    };

    static void makeBin(int totalBinEventCount, BinParameters *binIn, SetupParameters setup);
};

#endif /* PARALLEL_BIN_CUH_ */